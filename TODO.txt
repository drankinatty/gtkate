Overall

  * Rename funcitons used in multi-file/multi-view scheme. Come up with consistent and sane convention so that descriptive names describing functionality are used throughout.

  * app->focused (which controls which view and buffer are currently active) needs to be traced to determine when it is update in relationship to where callbacks for statusbar update and on-mark-set are fired. The current view/buffer tracking scheme seems to get behind in some instances leading to statusbar updates to only one of multiple active views.

  * implement projects to save and restore collections of files at once.

buffer

  * adapt file open/save for document tree entries and check for buffer modified.
    - get_open_filename
    - split filename
    - get g_stat info
    - read file
    - set sourceview language
    - set gfile monitor
    - update kinst members for app->focused view
    - add to treemodel/treeview
    - display file in view
  * save will require check of NULL/filename

  * close-all, handle in two parts, close all active view and then close all documents in tree, then close app.

  * write file data out containing line, col and sourceview lang_id to restore view on file open. Use GFile and GHashtable to hash pointer to info to use in kinst_t instance initialization, replace contents of file on close, write serialized binary format similar to 'line col szfilenm szlangid filename lang_id' (4 int, 2 strings). Add to hashtable on open/save/close/close-all. remainder of kinst_t information can be derived from this.

  * write manual close of all open windows prior to gtk_quit to insure a sequenced shutdown so there is no einst_reset() or buffer_del_inst() before all associated views holding the buffer are closed and the buffer freed.

  * additional infobar functions need to be incorporated from gtkwrite.

find/replace

  * create findrep_t struct instead of the static globals in gtk_findreplace.c

infobars

  * rework edit window instances and bounding vbox settings so infobar does not cause expansion in vertical size of bounding vbox when inforbar shown.

mainwin

  * fix update window title on file open.

menu

  * done.

settings

  * check app->comment free on close - settings entry currently set with either inst->comment_single if set, or app->comment otherwise.

 statusbar

  * add settings option to add colname to end of info on statusbar.

  * on split of view, statusbar not drawn until focus placed in view (consider grab_focus at end of ewin_create_view())

toolbar

  * done

textview/multiview edit pane

  * decide whether to place focus in new instance or leave on current
   (chose focus on new inst/view).

  * decide whether to scroll new instance to match current insert mark.

  * determine if current line highlight can be independent of buffer (doubtful since it is a sourceview feature attached to a sourcebuffer)

  * add keypress event handling of shortcut keys to move between open view and prev/next document in treeview.

treeview/model

  * consider (app->treeview)[n] to allow multiple views for showing files grouped by directory, or sorted based on opening or ascending/descending alphabetical sort.

  * set tooltip on each entry showing 'filename' (absolute path & filename) in create_view_and_model(), set "has-tooltip" TRUE and then connect "query-tooltip" signal for handling by the gtk_tree_view_set_tooltip_row() function. e.g. g_object_set (view, "has-tooltip", TRUE, NULL);

  * place focus on associated textview when selected.

  * treeview_changed() save rectangle to restore to exact col/line when buffer brought back into a sourceview window. Currently curor-line is restored at 25% of the window.


